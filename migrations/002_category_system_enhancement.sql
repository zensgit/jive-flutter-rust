-- ============================================================================
-- Jive Money ÂàÜÁ±ªÁ≥ªÁªüÂ¢ûÂº∫
-- ÁâàÊú¨: 2.0
-- ÂàõÂª∫Êó•Êúü: 2025-01-01
-- ÊèèËø∞: ÂÆûÁé∞ÂÆåÊï¥ÁöÑ‰∏âÂ±ÇÂàÜÁ±ªÊû∂ÊûÑÔºàÁ≥ªÁªüÊ®°Êùø ‚Üí Áî®Êà∑ÂàÜÁ±ª ‚Üí Ê†áÁ≠æÔºâ
-- ============================================================================

-- ============================================================================
-- 1. ÂàÜÁ±ªÁªÑË°® - Áî®‰∫éÁªÑÁªáÁ≥ªÁªüÂàÜÁ±ªÊ®°Êùø
-- ============================================================================
CREATE TABLE IF NOT EXISTS category_groups (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    key VARCHAR(50) UNIQUE NOT NULL,
    name VARCHAR(100) NOT NULL,
    name_en VARCHAR(100),
    name_zh VARCHAR(100),
    description TEXT,
    icon VARCHAR(50),
    display_order INTEGER DEFAULT 0,
    is_active BOOLEAN DEFAULT true,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP
);

-- ÂàõÂª∫Á¥¢Âºï
CREATE INDEX idx_category_groups_key ON category_groups(key);
CREATE INDEX idx_category_groups_order ON category_groups(display_order);
CREATE INDEX idx_category_groups_active ON category_groups(is_active);

-- ============================================================================
-- 2. Á≥ªÁªüÂàÜÁ±ªÊ®°ÊùøË°®
-- ============================================================================
CREATE TABLE IF NOT EXISTS system_category_templates (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    -- Âü∫Á°Ä‰ø°ÊÅØ
    name VARCHAR(100) NOT NULL,
    name_en VARCHAR(100),
    name_zh VARCHAR(100),
    description TEXT,
    
    -- ÂàÜÁ±ªÂ±ûÊÄß
    classification VARCHAR(20) NOT NULL CHECK (classification IN ('income', 'expense', 'transfer')),
    color VARCHAR(7) NOT NULL CHECK (color ~ '^#[0-9A-Fa-f]{6}$'),
    icon VARCHAR(50),
    category_group VARCHAR(50) REFERENCES category_groups(key),
    
    -- ÂÖÉÊï∞ÊçÆ
    version VARCHAR(20) DEFAULT '1.0.0',
    is_active BOOLEAN DEFAULT true,
    is_featured BOOLEAN DEFAULT false,
    global_usage_count INTEGER DEFAULT 0,
    tags TEXT[],
    
    -- ÂÆ°ËÆ°Â≠óÊÆµ
    created_by UUID REFERENCES users(id),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    
    -- Á∫¶Êùü
    CONSTRAINT uk_template_name_group UNIQUE(name, category_group)
);

-- ÂàõÂª∫Á¥¢Âºï
CREATE INDEX idx_templates_group ON system_category_templates(category_group);
CREATE INDEX idx_templates_classification ON system_category_templates(classification);
CREATE INDEX idx_templates_featured ON system_category_templates(is_featured) WHERE is_featured = true;
CREATE INDEX idx_templates_active ON system_category_templates(is_active) WHERE is_active = true;
CREATE INDEX idx_templates_usage ON system_category_templates(global_usage_count DESC);

-- ============================================================================
-- 3. Â¢ûÂº∫Áî®Êà∑ÂàÜÁ±ªË°®
-- ============================================================================
ALTER TABLE categories ADD COLUMN IF NOT EXISTS source_type VARCHAR(20) DEFAULT 'custom' 
    CHECK (source_type IN ('system', 'custom', 'imported'));
ALTER TABLE categories ADD COLUMN IF NOT EXISTS template_id UUID REFERENCES system_category_templates(id);
ALTER TABLE categories ADD COLUMN IF NOT EXISTS template_version VARCHAR(20);
ALTER TABLE categories ADD COLUMN IF NOT EXISTS position INTEGER DEFAULT 0;
ALTER TABLE categories ADD COLUMN IF NOT EXISTS usage_count INTEGER DEFAULT 0;
ALTER TABLE categories ADD COLUMN IF NOT EXISTS last_used_at TIMESTAMP WITH TIME ZONE;

-- ÂàõÂª∫Êñ∞Á¥¢Âºï
CREATE INDEX IF NOT EXISTS idx_categories_template ON categories(template_id);
CREATE INDEX IF NOT EXISTS idx_categories_position ON categories(ledger_id, position);
CREATE INDEX IF NOT EXISTS idx_categories_usage ON categories(usage_count DESC);
CREATE INDEX IF NOT EXISTS idx_categories_last_used ON categories(last_used_at DESC NULLS LAST);

-- ============================================================================
-- 4. ÊâπÈáèÊìç‰ΩúËÆ∞ÂΩïË°®
-- ============================================================================
CREATE TABLE IF NOT EXISTS category_batch_operations (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id UUID NOT NULL REFERENCES users(id),
    operation_type VARCHAR(20) NOT NULL CHECK (operation_type IN ('recategorize', 'convert', 'merge', 'delete')),
    original_data JSONB,
    affected_transactions INTEGER DEFAULT 0,
    can_revert BOOLEAN DEFAULT true,
    reverted_at TIMESTAMP WITH TIME ZONE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    expires_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP + INTERVAL '24 hours',
    
    -- Á∫¶Êùü
    CONSTRAINT chk_revert_before_expire CHECK (reverted_at IS NULL OR reverted_at <= expires_at)
);

-- ÂàõÂª∫Á¥¢Âºï
CREATE INDEX idx_batch_operations_user ON category_batch_operations(user_id, created_at DESC);
CREATE INDEX idx_batch_operations_type ON category_batch_operations(operation_type);
CREATE INDEX idx_batch_operations_expires ON category_batch_operations(expires_at) WHERE can_revert = true;

-- ============================================================================
-- 5. ÂàÜÁ±ªËΩ¨Êç¢ÂéÜÂè≤Ë°®
-- ============================================================================
CREATE TABLE IF NOT EXISTS category_conversions (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    user_id UUID NOT NULL REFERENCES users(id),
    ledger_id UUID NOT NULL REFERENCES ledgers(id),
    
    -- ËΩ¨Êç¢‰ø°ÊÅØ
    source_category_id UUID NOT NULL,
    source_category_name VARCHAR(100) NOT NULL,
    target_tag_id UUID REFERENCES tags(id),
    target_tag_name VARCHAR(100) NOT NULL,
    
    -- ËΩ¨Êç¢ÈÄâÈ°π
    applied_to_transactions BOOLEAN DEFAULT false,
    transaction_count INTEGER DEFAULT 0,
    date_range_start DATE,
    date_range_end DATE,
    category_deleted BOOLEAN DEFAULT false,
    
    -- ÂÆ°ËÆ°
    created_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    
    -- Á¥¢Âºï
    CONSTRAINT fk_conversions_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

CREATE INDEX idx_conversions_user ON category_conversions(user_id, created_at DESC);
CREATE INDEX idx_conversions_category ON category_conversions(source_category_id);
CREATE INDEX idx_conversions_tag ON category_conversions(target_tag_id);

-- ============================================================================
-- 6. ÂàÜÁ±ª‰ΩøÁî®ÁªüËÆ°Ë°®ÔºàÁî®‰∫éÊô∫ËÉΩÊé®ËçêÔºâ
-- ============================================================================
CREATE TABLE IF NOT EXISTS category_usage_stats (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    category_id UUID NOT NULL REFERENCES categories(id) ON DELETE CASCADE,
    user_id UUID NOT NULL REFERENCES users(id),
    ledger_id UUID NOT NULL REFERENCES ledgers(id),
    
    -- ÁªüËÆ°Êï∞ÊçÆ
    usage_count INTEGER DEFAULT 0,
    last_used_at TIMESTAMP WITH TIME ZONE,
    total_amount DECIMAL(19, 4) DEFAULT 0,
    average_amount DECIMAL(19, 4) DEFAULT 0,
    
    -- Êó∂Èó¥ÂàÜÂ∏É
    morning_count INTEGER DEFAULT 0,    -- 6:00-12:00
    afternoon_count INTEGER DEFAULT 0,  -- 12:00-18:00
    evening_count INTEGER DEFAULT 0,    -- 18:00-24:00
    night_count INTEGER DEFAULT 0,      -- 0:00-6:00
    
    -- ÊòüÊúüÂàÜÂ∏É
    weekday_count INTEGER DEFAULT 0,
    weekend_count INTEGER DEFAULT 0,
    
    -- Êõ¥Êñ∞Êó∂Èó¥
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP,
    
    -- ÂîØ‰∏ÄÁ∫¶Êùü
    CONSTRAINT uk_category_user_ledger UNIQUE(category_id, user_id, ledger_id)
);

CREATE INDEX idx_usage_stats_category ON category_usage_stats(category_id);
CREATE INDEX idx_usage_stats_user ON category_usage_stats(user_id);
CREATE INDEX idx_usage_stats_count ON category_usage_stats(usage_count DESC);

-- ============================================================================
-- 7. ÊèíÂÖ•ÈªòËÆ§ÂàÜÁ±ªÁªÑ
-- ============================================================================
INSERT INTO category_groups (key, name, name_en, name_zh, icon, display_order) VALUES
    ('income', 'Êî∂ÂÖ•Á±ªÂà´', 'Income', 'Êî∂ÂÖ•Á±ªÂà´', 'üí∞', 1),
    ('daily_expense', 'Êó•Â∏∏Ê∂àË¥π', 'Daily Expenses', 'Êó•Â∏∏Ê∂àË¥π', 'üõí', 2),
    ('housing', 'Â±Ö‰ΩèÁõ∏ÂÖ≥', 'Housing', 'Â±Ö‰ΩèÁõ∏ÂÖ≥', 'üè†', 3),
    ('transportation', '‰∫§ÈÄöÂá∫Ë°å', 'Transportation', '‰∫§ÈÄöÂá∫Ë°å', 'üöó', 4),
    ('health_education', 'ÂÅ•Â∫∑ÊïôËÇ≤', 'Health & Education', 'ÂÅ•Â∫∑ÊïôËÇ≤', 'üè•', 5),
    ('entertainment_social', 'Â®±‰πêÁ§æ‰∫§', 'Entertainment & Social', 'Â®±‰πêÁ§æ‰∫§', 'üé¨', 6),
    ('financial', 'ÈáëËûçÁêÜË¥¢', 'Financial', 'ÈáëËûçÁêÜË¥¢', 'üí≥', 7),
    ('business', 'ÂïÜÂä°ÂäûÂÖ¨', 'Business', 'ÂïÜÂä°ÂäûÂÖ¨', 'üíº', 8),
    ('other', 'ÂÖ∂‰ªñ', 'Other', 'ÂÖ∂‰ªñ', 'üì¶', 9)
ON CONFLICT (key) DO NOTHING;

-- ============================================================================
-- 8. ÊèíÂÖ•Á≥ªÁªüÂàÜÁ±ªÊ®°ÊùøÔºà50+ È¢ÑËÆæÊ®°ÊùøÔºâ
-- ============================================================================

-- Êî∂ÂÖ•Á±ªÂà´
INSERT INTO system_category_templates (name, name_en, name_zh, classification, color, icon, category_group, is_featured, tags) VALUES
    ('Â∑•ËµÑÊî∂ÂÖ•', 'Salary', 'Â∑•ËµÑÊî∂ÂÖ•', 'income', '#10B981', 'üí∞', 'income', true, ARRAY['ÂøÖÂ§á', 'Â∏∏Áî®']),
    ('Â•ñÈáëÊî∂ÂÖ•', 'Bonus', 'Â•ñÈáëÊî∂ÂÖ•', 'income', '#059669', 'üéÅ', 'income', true, ARRAY['Â∏∏Áî®']),
    ('ÊäïËµÑÊî∂Áõä', 'Investment Income', 'ÊäïËµÑÊî∂Áõä', 'income', '#047857', 'üìà', 'income', false, ARRAY['ÁêÜË¥¢']),
    ('ÂâØ‰∏öÊî∂ÂÖ•', 'Side Income', 'ÂâØ‰∏öÊî∂ÂÖ•', 'income', '#065F46', 'üíº', 'income', false, ARRAY['ÂÖºËÅå']),
    ('ÁßüÈáëÊî∂ÂÖ•', 'Rental Income', 'ÁßüÈáëÊî∂ÂÖ•', 'income', '#064E3B', 'üèòÔ∏è', 'income', false, ARRAY['Êàø‰∫ß']),
    ('ÂàÜÁ∫¢Êî∂ÂÖ•', 'Dividend', 'ÂàÜÁ∫¢Êî∂ÂÖ•', 'income', '#14B8A6', 'üíπ', 'income', false, ARRAY['ÊäïËµÑ']),
    ('Âà©ÊÅØÊî∂ÂÖ•', 'Interest', 'Âà©ÊÅØÊî∂ÂÖ•', 'income', '#0D9488', 'üè¶', 'income', false, ARRAY['ÁêÜË¥¢']),
    ('ÈÄÄÁ®é', 'Tax Refund', 'ÈÄÄÁ®é', 'income', '#0F766E', 'üìã', 'income', false, ARRAY['ÊîøÂ∫ú']),
    ('Á§ºÈáë', 'Gift Money', 'Á§ºÈáë', 'income', '#115E59', 'üßß', 'income', false, ARRAY['ËäÇÊó•']),
    ('ÂÖ∂‰ªñÊî∂ÂÖ•', 'Other Income', 'ÂÖ∂‰ªñÊî∂ÂÖ•', 'income', '#134E4A', 'üì•', 'income', false, ARRAY['ÂÖ∂‰ªñ'])
ON CONFLICT (name, category_group) DO NOTHING;

-- Êó•Â∏∏Ê∂àË¥π
INSERT INTO system_category_templates (name, name_en, name_zh, classification, color, icon, category_group, is_featured, tags) VALUES
    ('È§êÈ•ÆÁæéÈ£ü', 'Food & Dining', 'È§êÈ•ÆÁæéÈ£ü', 'expense', '#EF4444', 'üçΩÔ∏è', 'daily_expense', true, ARRAY['ÁÉ≠Èó®', 'ÂøÖÂ§á']),
    ('Êó©È§ê', 'Breakfast', 'Êó©È§ê', 'expense', '#F87171', 'ü•ê', 'daily_expense', false, ARRAY['È§êÈ•Æ']),
    ('ÂçàÈ§ê', 'Lunch', 'ÂçàÈ§ê', 'expense', '#F87171', 'üç±', 'daily_expense', false, ARRAY['È§êÈ•Æ']),
    ('ÊôöÈ§ê', 'Dinner', 'ÊôöÈ§ê', 'expense', '#F87171', 'üçù', 'daily_expense', false, ARRAY['È§êÈ•Æ']),
    ('ÂíñÂï°Ëå∂È•Æ', 'Coffee & Tea', 'ÂíñÂï°Ëå∂È•Æ', 'expense', '#FB923C', '‚òï', 'daily_expense', true, ARRAY['ÁÉ≠Èó®']),
    ('Èõ∂È£üÈ•ÆÊñô', 'Snacks & Drinks', 'Èõ∂È£üÈ•ÆÊñô', 'expense', '#FDBA74', 'ü•§', 'daily_expense', false, ARRAY['Êó•Â∏∏']),
    ('‰π∞Ëèú', 'Groceries', '‰π∞Ëèú', 'expense', '#FCD34D', 'ü•¨', 'daily_expense', true, ARRAY['ÂøÖÂ§á']),
    ('Êó•Áî®ÂìÅ', 'Daily Necessities', 'Êó•Áî®ÂìÅ', 'expense', '#FDE047', 'üßª', 'daily_expense', true, ARRAY['ÂøÖÂ§á']),
    ('ÊúçË£ÖÈûãÂåÖ', 'Clothing & Shoes', 'ÊúçË£ÖÈûãÂåÖ', 'expense', '#FACC15', 'üëî', 'daily_expense', true, ARRAY['Ë¥≠Áâ©']),
    ('ÂåñÂ¶ÜÂìÅ', 'Cosmetics', 'ÂåñÂ¶ÜÂìÅ', 'expense', '#FBD144', 'üíÑ', 'daily_expense', false, ARRAY['ÁæéÂ¶Ü'])
ON CONFLICT (name, category_group) DO NOTHING;

-- ‰∫§ÈÄöÂá∫Ë°å
INSERT INTO system_category_templates (name, name_en, name_zh, classification, color, icon, category_group, is_featured, tags) VALUES
    ('ÂÖ¨ÂÖ±‰∫§ÈÄö', 'Public Transport', 'ÂÖ¨ÂÖ±‰∫§ÈÄö', 'expense', '#F97316', 'üöá', 'transportation', true, ARRAY['ÂøÖÂ§á']),
    ('ÊâìËΩ¶', 'Taxi/Ride', 'ÊâìËΩ¶', 'expense', '#FB923C', 'üöï', 'transportation', true, ARRAY['ÁÉ≠Èó®']),
    ('Âä†Ê≤π', 'Gas/Fuel', 'Âä†Ê≤π', 'expense', '#FDBA74', '‚õΩ', 'transportation', true, ARRAY['ËΩ¶ËæÜ']),
    ('ÂÅúËΩ¶Ë¥π', 'Parking', 'ÂÅúËΩ¶Ë¥π', 'expense', '#FED7AA', 'üÖøÔ∏è', 'transportation', false, ARRAY['ËΩ¶ËæÜ']),
    ('Ê±ΩËΩ¶‰øùÂÖª', 'Car Maintenance', 'Ê±ΩËΩ¶‰øùÂÖª', 'expense', '#FFEDD5', 'üîß', 'transportation', false, ARRAY['ËΩ¶ËæÜ']),
    ('ÁÅ´ËΩ¶Á•®', 'Train Ticket', 'ÁÅ´ËΩ¶Á•®', 'expense', '#EA580C', 'üöÑ', 'transportation', false, ARRAY['Âá∫Ë°å']),
    ('Êú∫Á•®', 'Flight Ticket', 'Êú∫Á•®', 'expense', '#DC2626', '‚úàÔ∏è', 'transportation', false, ARRAY['ÊóÖË°å']),
    ('È´òÈÄüË¥π', 'Highway Toll', 'È´òÈÄüË¥π', 'expense', '#C2410C', 'üõ£Ô∏è', 'transportation', false, ARRAY['ËΩ¶ËæÜ'])
ON CONFLICT (name, category_group) DO NOTHING;

-- Â±Ö‰ΩèÁõ∏ÂÖ≥
INSERT INTO system_category_templates (name, name_en, name_zh, classification, color, icon, category_group, is_featured, tags) VALUES
    ('ÊàøÁßü', 'Rent', 'ÊàøÁßü', 'expense', '#8B5CF6', 'üè†', 'housing', true, ARRAY['ÂøÖÂ§á']),
    ('ÊàøË¥∑', 'Mortgage', 'ÊàøË¥∑', 'expense', '#A78BFA', 'üè¶', 'housing', true, ARRAY['ÂøÖÂ§á']),
    ('Ê∞¥Ë¥π', 'Water Bill', 'Ê∞¥Ë¥π', 'expense', '#C4B5FD', 'üíß', 'housing', true, ARRAY['ÂøÖÂ§á']),
    ('ÁîµË¥π', 'Electricity Bill', 'ÁîµË¥π', 'expense', '#DDD6FE', '‚ö°', 'housing', true, ARRAY['ÂøÖÂ§á']),
    ('ÁáÉÊ∞îË¥π', 'Gas Bill', 'ÁáÉÊ∞îË¥π', 'expense', '#E9D5FF', 'üî•', 'housing', true, ARRAY['ÂøÖÂ§á']),
    ('Áâ©‰∏öË¥π', 'Property Fee', 'Áâ©‰∏öË¥π', 'expense', '#F3E8FF', 'üè¢', 'housing', false, ARRAY['Áâ©‰∏ö']),
    ('ÁΩëË¥π', 'Internet', 'ÁΩëË¥π', 'expense', '#EDE9FE', 'üåê', 'housing', true, ARRAY['ÂøÖÂ§á']),
    ('ÂÆ∂ÂÖ∑ÂÆ∂Áîµ', 'Furniture', 'ÂÆ∂ÂÖ∑ÂÆ∂Áîµ', 'expense', '#7C3AED', 'üõãÔ∏è', 'housing', false, ARRAY['Ë£Ö‰øÆ'])
ON CONFLICT (name, category_group) DO NOTHING;

-- ÂÅ•Â∫∑ÊïôËÇ≤
INSERT INTO system_category_templates (name, name_en, name_zh, classification, color, icon, category_group, is_featured, tags) VALUES
    ('ÂåªÁñóË¥π', 'Medical', 'ÂåªÁñóË¥π', 'expense', '#DC2626', 'üè•', 'health_education', true, ARRAY['ÈáçË¶Å']),
    ('ËçØÂìÅË¥π', 'Medicine', 'ËçØÂìÅË¥π', 'expense', '#EF4444', 'üíä', 'health_education', true, ARRAY['ÂÅ•Â∫∑']),
    ('‰ΩìÊ£Ä', 'Health Check', '‰ΩìÊ£Ä', 'expense', '#F87171', 'ü©∫', 'health_education', false, ARRAY['ÂÅ•Â∫∑']),
    ('ÂÅ•Ë∫´', 'Fitness', 'ÂÅ•Ë∫´', 'expense', '#10B981', 'üí™', 'health_education', true, ARRAY['ËøêÂä®']),
    ('ÊïôËÇ≤ÂüπËÆ≠', 'Education', 'ÊïôËÇ≤ÂüπËÆ≠', 'expense', '#0EA5E9', 'üìö', 'health_education', true, ARRAY['Â≠¶‰π†']),
    ('‰π¶Á±ç', 'Books', '‰π¶Á±ç', 'expense', '#0284C7', 'üìñ', 'health_education', false, ARRAY['Â≠¶‰π†']),
    ('Âú®Á∫øËØæÁ®ã', 'Online Course', 'Âú®Á∫øËØæÁ®ã', 'expense', '#0369A1', 'üíª', 'health_education', false, ARRAY['Â≠¶‰π†'])
ON CONFLICT (name, category_group) DO NOTHING;

-- Â®±‰πêÁ§æ‰∫§
INSERT INTO system_category_templates (name, name_en, name_zh, classification, color, icon, category_group, is_featured, tags) VALUES
    ('ÁîµÂΩ±', 'Movies', 'ÁîµÂΩ±', 'expense', '#7C3AED', 'üé¨', 'entertainment_social', true, ARRAY['ÁÉ≠Èó®']),
    ('Ê∏∏Êàè', 'Games', 'Ê∏∏Êàè', 'expense', '#8B5CF6', 'üéÆ', 'entertainment_social', true, ARRAY['ÁÉ≠Èó®']),
    ('KTV', 'KTV', 'KTV', 'expense', '#A78BFA', 'üé§', 'entertainment_social', false, ARRAY['Á§æ‰∫§']),
    ('ÊóÖÊ∏∏', 'Travel', 'ÊóÖÊ∏∏', 'expense', '#C4B5FD', 'üåç', 'entertainment_social', true, ARRAY['ÁÉ≠Èó®']),
    ('ËÅöÈ§ê', 'Dining Out', 'ËÅöÈ§ê', 'expense', '#DDD6FE', 'üçª', 'entertainment_social', true, ARRAY['Á§æ‰∫§']),
    ('Á§ºÁâ©', 'Gifts', 'Á§ºÁâ©', 'expense', '#E9D5FF', 'üéÅ', 'entertainment_social', false, ARRAY['Á§æ‰∫§']),
    ('‰ºöÂëòËÆ¢ÈòÖ', 'Subscriptions', '‰ºöÂëòËÆ¢ÈòÖ', 'expense', '#F3E8FF', 'üì±', 'entertainment_social', true, ARRAY['ËÆ¢ÈòÖ'])
ON CONFLICT (name, category_group) DO NOTHING;

-- ÈáëËûçÁêÜË¥¢
INSERT INTO system_category_templates (name, name_en, name_zh, classification, color, icon, category_group, is_featured, tags) VALUES
    ('ÊäïËµÑÁêÜË¥¢', 'Investment', 'ÊäïËµÑÁêÜË¥¢', 'expense', '#059669', 'üìà', 'financial', true, ARRAY['ÁêÜË¥¢']),
    ('‰øùÈô©', 'Insurance', '‰øùÈô©', 'expense', '#10B981', 'üõ°Ô∏è', 'financial', true, ARRAY['‰øùÈöú']),
    ('‰ø°Áî®Âç°ËøòÊ¨æ', 'Credit Card', '‰ø°Áî®Âç°ËøòÊ¨æ', 'expense', '#34D399', 'üí≥', 'financial', true, ARRAY['ËøòÊ¨æ']),
    ('Ë¥∑Ê¨æËøòÊ¨æ', 'Loan Payment', 'Ë¥∑Ê¨æËøòÊ¨æ', 'expense', '#6EE7B7', 'üè¶', 'financial', false, ARRAY['ËøòÊ¨æ']),
    ('ÊâãÁª≠Ë¥π', 'Service Fee', 'ÊâãÁª≠Ë¥π', 'expense', '#A7F3D0', 'üí∏', 'financial', false, ARRAY['Ë¥πÁî®'])
ON CONFLICT (name, category_group) DO NOTHING;

-- ============================================================================
-- 9. ÂàõÂª∫Ëß¶ÂèëÂô®ÂáΩÊï∞ - Ëá™Âä®Êõ¥Êñ∞ÂàÜÁ±ª‰ΩøÁî®ÁªüËÆ°
-- ============================================================================
CREATE OR REPLACE FUNCTION update_category_usage_stats()
RETURNS TRIGGER AS $$
BEGIN
    IF TG_OP = 'INSERT' OR (TG_OP = 'UPDATE' AND OLD.category_id IS DISTINCT FROM NEW.category_id) THEN
        -- Êõ¥Êñ∞Êñ∞ÂàÜÁ±ªÁöÑÁªüËÆ°
        IF NEW.category_id IS NOT NULL THEN
            UPDATE categories 
            SET usage_count = usage_count + 1,
                last_used_at = CURRENT_TIMESTAMP
            WHERE id = NEW.category_id;
            
            -- Êõ¥Êñ∞ÊàñÊèíÂÖ•‰ΩøÁî®ÁªüËÆ°
            INSERT INTO category_usage_stats (
                category_id, user_id, ledger_id, 
                usage_count, last_used_at, total_amount
            ) VALUES (
                NEW.category_id, NEW.user_id, NEW.ledger_id,
                1, CURRENT_TIMESTAMP, NEW.amount
            )
            ON CONFLICT (category_id, user_id, ledger_id) 
            DO UPDATE SET
                usage_count = category_usage_stats.usage_count + 1,
                last_used_at = CURRENT_TIMESTAMP,
                total_amount = category_usage_stats.total_amount + EXCLUDED.total_amount,
                average_amount = (category_usage_stats.total_amount + EXCLUDED.total_amount) / (category_usage_stats.usage_count + 1);
        END IF;
        
        -- Êõ¥Êñ∞ÊóßÂàÜÁ±ªÁöÑÁªüËÆ°ÔºàÂ¶ÇÊûúÊòØUPDATEÊìç‰ΩúÔºâ
        IF TG_OP = 'UPDATE' AND OLD.category_id IS NOT NULL AND OLD.category_id IS DISTINCT FROM NEW.category_id THEN
            UPDATE categories 
            SET usage_count = GREATEST(usage_count - 1, 0)
            WHERE id = OLD.category_id;
        END IF;
    END IF;
    
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- ÂàõÂª∫Ëß¶ÂèëÂô®
DROP TRIGGER IF EXISTS trg_update_category_usage ON transactions;
CREATE TRIGGER trg_update_category_usage
    AFTER INSERT OR UPDATE OF category_id ON transactions
    FOR EACH ROW
    EXECUTE FUNCTION update_category_usage_stats();

-- ============================================================================
-- 10. ÂàõÂª∫ËßÜÂõæ - ÂàÜÁ±ªÂ±ÇÁ∫ßËßÜÂõæ
-- ============================================================================
CREATE OR REPLACE VIEW v_category_hierarchy AS
WITH RECURSIVE category_tree AS (
    -- Ê†πÂàÜÁ±ª
    SELECT 
        c.id,
        c.name,
        c.parent_id,
        c.color,
        c.icon,
        c.classification,
        c.usage_count,
        0 as depth,
        ARRAY[c.id] as path,
        c.name as full_path
    FROM categories c
    WHERE c.parent_id IS NULL AND c.deleted_at IS NULL
    
    UNION ALL
    
    -- Â≠êÂàÜÁ±ª
    SELECT 
        c.id,
        c.name,
        c.parent_id,
        c.color,
        c.icon,
        c.classification,
        c.usage_count,
        ct.depth + 1,
        ct.path || c.id,
        ct.full_path || ' > ' || c.name
    FROM categories c
    INNER JOIN category_tree ct ON c.parent_id = ct.id
    WHERE c.deleted_at IS NULL
)
SELECT * FROM category_tree;

-- ============================================================================
-- 11. ÂàõÂª∫ÂáΩÊï∞ - Ëé∑ÂèñÂàÜÁ±ªÊé®Ëçê
-- ============================================================================
CREATE OR REPLACE FUNCTION get_category_suggestions(
    p_description TEXT,
    p_user_id UUID,
    p_ledger_id UUID,
    p_limit INT DEFAULT 5
)
RETURNS TABLE (
    category_id UUID,
    category_name VARCHAR,
    confidence_score FLOAT,
    reason TEXT
) AS $$
BEGIN
    RETURN QUERY
    WITH keyword_matches AS (
        -- Âü∫‰∫éÂÖ≥ÈîÆËØçÂåπÈÖç
        SELECT 
            c.id,
            c.name,
            0.8 as score,
            'ÂÖ≥ÈîÆËØçÂåπÈÖç' as reason
        FROM categories c
        WHERE c.ledger_id = p_ledger_id
            AND c.deleted_at IS NULL
            AND c.is_active = true
            AND (
                p_description ILIKE '%' || c.name || '%'
                OR c.name ILIKE '%' || p_description || '%'
            )
    ),
    frequent_categories AS (
        -- Âü∫‰∫é‰ΩøÁî®È¢ëÁéá
        SELECT 
            c.id,
            c.name,
            0.6 as score,
            'Â∏∏Áî®ÂàÜÁ±ª' as reason
        FROM categories c
        INNER JOIN category_usage_stats s ON c.id = s.category_id
        WHERE s.user_id = p_user_id
            AND s.ledger_id = p_ledger_id
            AND c.deleted_at IS NULL
            AND c.is_active = true
        ORDER BY s.usage_count DESC
        LIMIT 3
    ),
    recent_categories AS (
        -- Âü∫‰∫éÊúÄËøë‰ΩøÁî®
        SELECT 
            c.id,
            c.name,
            0.5 as score,
            'ÊúÄËøë‰ΩøÁî®' as reason
        FROM categories c
        WHERE c.ledger_id = p_ledger_id
            AND c.deleted_at IS NULL
            AND c.is_active = true
            AND c.last_used_at IS NOT NULL
        ORDER BY c.last_used_at DESC
        LIMIT 3
    )
    -- ÂêàÂπ∂ÁªìÊûú
    SELECT DISTINCT ON (id)
        id as category_id,
        name as category_name,
        MAX(score) as confidence_score,
        MAX(reason) as reason
    FROM (
        SELECT * FROM keyword_matches
        UNION ALL
        SELECT * FROM frequent_categories
        UNION ALL
        SELECT * FROM recent_categories
    ) suggestions
    GROUP BY id, name
    ORDER BY id, MAX(score) DESC
    LIMIT p_limit;
END;
$$ LANGUAGE plpgsql;

-- ============================================================================
-- 12. ÊùÉÈôêËÆæÁΩÆ
-- ============================================================================
GRANT SELECT ON category_groups TO authenticated;
GRANT SELECT ON system_category_templates TO authenticated;
GRANT ALL ON categories TO authenticated;
GRANT ALL ON category_batch_operations TO authenticated;
GRANT ALL ON category_conversions TO authenticated;
GRANT ALL ON category_usage_stats TO authenticated;
GRANT SELECT ON v_category_hierarchy TO authenticated;
GRANT EXECUTE ON FUNCTION get_category_suggestions TO authenticated;

-- ============================================================================
-- Êõ¥Êñ∞Êó∂Èó¥Êà≥Ëß¶ÂèëÂô®
-- ============================================================================
CREATE TRIGGER update_category_groups_updated_at
    BEFORE UPDATE ON category_groups
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_system_category_templates_updated_at
    BEFORE UPDATE ON system_category_templates
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

-- ============================================================================
-- ÁªìÊùü
-- ============================================================================