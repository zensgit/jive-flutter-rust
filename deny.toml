# cargo-deny configuration for Jive Money project
# This configuration helps ensure security, licensing compliance, and dependency management

# The path where the deny.toml file is located relative to the workspace root
[graph]
# The file system path to the graph file to use
# targets = []

# Deny certain platforms from being used
[targets]
# The field that will be checked, this value must be one of
# - triple
# - arch
# - os
# - env
#
# cfg = "triple"
# The value to match
# value = "x86_64-unknown-linux-gnu"

[advisories]
# The lint level for advisories that are for crates that are not direct dependencies
db-path = "~/.cargo/advisory-db"
db-urls = ["https://github.com/rustsec/advisory-db"]
# The lint level for crates that have a vulnerability
vulnerability = "deny"
# The lint level for crates that have been marked as unmaintained
unmaintained = "warn"
# The lint level for crates that have been yanked from crates.io
yanked = "deny"
# A list of advisory IDs to ignore
ignore = [
    # These are known issues that we've evaluated and determined acceptable
    # Add RUSTSEC advisory IDs here if needed
]

[licenses]
# List of explicitly allowed licenses
# See https://spdx.org/licenses/ for list of valid identifiers
allow = [
    "MIT",
    "Apache-2.0",
    "Apache-2.0 WITH LLVM-exception",
    "BSD-2-Clause",
    "BSD-3-Clause",
    "ISC",
    "Unicode-DFS-2016",
    "OpenSSL",
    "MPL-2.0",
    "CC0-1.0",
    "BSL-1.0",  # Boost Software License
    "Zlib",
    "Unlicense",
]

# List of explicitly disallowed licenses
deny = [
    "GPL-2.0",
    "GPL-3.0",
    "AGPL-3.0",
    "LGPL-2.0",
    "LGPL-2.1",
    "LGPL-3.0",
    "SSPL-1.0",  # Server Side Public License (MongoDB)
]

# Lint level for when multiple versions of the same license are detected
copyleft = "deny"
# Blanket approval or denial for OSI-approved or FSF-approved licenses
allow-osi-fsf-free = "both"
# Lint level used when no license is detected
default = "deny"
# The confidence threshold for detecting a license from a license text.
# Expressed as a floating point number between 0.0 and 1.0
confidence-threshold = 0.8

# Allow certain licenses for specific crates only
[[licenses.exceptions]]
allow = ["ring", "webpki"]
name = "ISC"

[bans]
# Lint level for when multiple versions of the same crate are detected
multiple-versions = "warn"
# Lint level for when a crate version requirement is `*`
wildcards = "allow"
# The graph highlighting used when creating dotgraphs for crates
highlight = "all"

# List of crates to deny
deny = [
    # Deny old/insecure crypto libraries
    { name = "openssl", version = "<0.10" },
    # Deny old/vulnerable versions of common crates
    { name = "serde", version = "<1.0" },
    # Deny yanked crates
    { name = "chrono", version = "=0.4.20" },  # Had a security issue
]

# Certain crates/versions that will be skipped when doing duplicate detection.
skip = [
    # Skip certain crates that commonly have multiple versions
    { name = "windows-sys" },  # Often multiple versions in dependency tree
    { name = "syn", version = "1.0" },  # v1 and v2 coexist
]

# Similarly to `skip` allows you to skip certain crates from being checked. Unlike `skip`,
# `skip-tree` skips the crate and all of its dependencies entirely.
skip-tree = [
    # Skip crates and their entire dependency trees
]

[sources]
# Lint level for what to happen when a crate from a crate registry that is
# not in the allow list is encountered
unknown-registry = "warn"
# Lint level for what to happen when a crate from a git repository that is not
# in the allow list is encountered
unknown-git = "warn"

# List of allowed registries
allow-registry = [
    "https://github.com/rust-lang/crates.io-index",
]

# List of allowed Git repositories
allow-git = [
    # Allow specific git dependencies if needed
    # "https://github.com/organization/repository"
]

# Configuration specific to the jive-api workspace
[[sources.allow-org]]
github = ["jive-org"]  # Replace with actual GitHub organization
gitlab = ["jive-gitlab"]  # Replace with actual GitLab organization if used